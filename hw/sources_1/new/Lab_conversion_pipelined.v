`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 02/13/2022 11:16:28 PM
// Design Name: 
// Module Name: Lab_conversion
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////




////////////// RGB TO Float/255 lookup table  /////////////
/* 
res(i+1,1)  = i/255; 
0    0                      00000000000000000000000000000000
    0.00392156862745098    00111011100000001000000010000001
    0.00784313725490196    00111100000000001000000010000001
    0.0117647058823529     00111100010000001100000011000001
    0.0156862745098039     00111100100000001000000010000001
    0.0196078431372549     00111100101000001010000010100001
    0.0235294117647059     00111100110000001100000011000001
    0.0274509803921569     00111100111000001110000011100001
    0.0313725490196078     00111101000000001000000010000001
    0.0352941176470588     00111101000100001001000010010001
    0.0392156862745098     00111101001000001010000010100001
    0.0431372549019608     00111101001100001011000010110001
    0.0470588235294118     00111101010000001100000011000001
    0.0509803921568627     00111101010100001101000011010001
    0.0549019607843137     00111101011000001110000011100001
    0.0588235294117647     00111101011100001111000011110001
    0.0627450980392157     00111101100000001000000010000001
    0.0666666666666667     00111101100010001000100010001001
    0.0705882352941177     00111101100100001001000010010001
    0.0745098039215686     00111101100110001001100010011001
    0.0784313725490196     00111101101000001010000010100001
    0.0823529411764706     00111101101010001010100010101001
    0.0862745098039216     00111101101100001011000010110001
    0.0901960784313726     00111101101110001011100010111001
    0.0941176470588235     00111101110000001100000011000001
    0.0980392156862745     00111101110010001100100011001001
    0.101960784313725      00111101110100001101000011010001
    0.105882352941176      00111101110110001101100011011001
    0.109803921568627      00111101111000001110000011100001
    0.113725490196078      00111101111010001110100011101001
    0.117647058823529      00111101111100001111000011110001
    0.121568627450980      00111101111110001111100011111001
    0.125490196078431      00111110000000001000000010000001
    0.129411764705882      00111110000001001000010010000101
    0.133333333333333      00111110000010001000100010001001
    0.137254901960784      00111110000011001000110010001101
    0.141176470588235      00111110000100001001000010010001
    0.145098039215686      00111110000101001001010010010101
    0.149019607843137      00111110000110001001100010011001
    0.152941176470588      00111110000111001001110010011101
    0.156862745098039      00111110001000001010000010100001
    0.160784313725490      00111110001001001010010010100101
    0.164705882352941      00111110001010001010100010101001
    0.168627450980392      00111110001011001010110010101101
    0.172549019607843      00111110001100001011000010110001
    0.176470588235294      00111110001101001011010010110101
    0.180392156862745      00111110001110001011100010111001
    0.184313725490196      00111110001111001011110010111101
    0.188235294117647      00111110010000001100000011000001
    0.192156862745098      00111110010001001100010011000101
    0.196078431372549      00111110010010001100100011001001
    0.200000000000000      00111110010011001100110011001101
    0.203921568627451      00111110010100001101000011010001
    0.207843137254902      00111110010101001101010011010101
    0.211764705882353      00111110010110001101100011011001
    0.215686274509804      00111110010111001101110011011101
    0.219607843137255      00111110011000001110000011100001
    0.223529411764706      00111110011001001110010011100101
    0.227450980392157      00111110011010001110100011101001
    0.231372549019608      00111110011011001110110011101101
    0.235294117647059      00111110011100001111000011110001
    0.239215686274510      00111110011101001111010011110101
    0.243137254901961      00111110011110001111100011111001
    0.247058823529412      00111110011111001111110011111101
    0.250980392156863      00111110100000001000000010000001
    0.254901960784314      00111110100000101000001010000011
    0.258823529411765      00111110100001001000010010000101
    0.262745098039216      00111110100001101000011010000111
    0.266666666666667      00111110100010001000100010001001
    0.270588235294118      00111110100010101000101010001011
    0.274509803921569      00111110100011001000110010001101
    0.278431372549020      00111110100011101000111010001111
    0.282352941176471      00111110100100001001000010010001
    0.286274509803922      00111110100100101001001010010011
    0.290196078431373      00111110100101001001010010010101
    0.294117647058824      00111110100101101001011010010111
    0.298039215686275      00111110100110001001100010011001
    0.301960784313725      00111110100110101001101010011011
    0.305882352941177      00111110100111001001110010011101
    0.309803921568627      00111110100111101001111010011111
    0.313725490196078      00111110101000001010000010100001
    0.317647058823529      00111110101000101010001010100011
    0.321568627450980      00111110101001001010010010100101
    0.325490196078431      00111110101001101010011010100111
    0.329411764705882      00111110101010001010100010101001
    0.333333333333333      00111110101010101010101010101011
    0.337254901960784      00111110101011001010110010101101
    0.341176470588235      00111110101011101010111010101111
    0.345098039215686      00111110101100001011000010110001
    0.349019607843137      00111110101100101011001010110011
    0.352941176470588      00111110101101001011010010110101
    0.356862745098039      00111110101101101011011010110111
    0.360784313725490      00111110101110001011100010111001
    0.364705882352941      00111110101110101011101010111011
    0.368627450980392      00111110101111001011110010111101
    0.372549019607843      00111110101111101011111010111111
    0.376470588235294      00111110110000001100000011000001
    0.380392156862745      00111110110000101100001011000011
    0.384313725490196      00111110110001001100010011000101
    0.388235294117647      00111110110001101100011011000111
    0.392156862745098      00111110110010001100100011001001
    0.396078431372549      00111110110010101100101011001011
    0.400000000000000      00111110110011001100110011001101
    0.403921568627451      00111110110011101100111011001111
    0.407843137254902      00111110110100001101000011010001
    0.411764705882353      00111110110100101101001011010011
    0.415686274509804      00111110110101001101010011010101
    0.419607843137255      00111110110101101101011011010111
    0.423529411764706      00111110110110001101100011011001
    0.427450980392157      00111110110110101101101011011011
    0.431372549019608      00111110110111001101110011011101
    0.435294117647059      00111110110111101101111011011111
    0.439215686274510      00111110111000001110000011100001
    0.443137254901961      00111110111000101110001011100011
    0.447058823529412      00111110111001001110010011100101
    0.450980392156863      00111110111001101110011011100111
    0.454901960784314      00111110111010001110100011101001
    0.458823529411765      00111110111010101110101011101011
    0.462745098039216      00111110111011001110110011101101
    0.466666666666667      00111110111011101110111011101111
    0.470588235294118      00111110111100001111000011110001
    0.474509803921569      00111110111100101111001011110011
    0.478431372549020      00111110111101001111010011110101
    0.482352941176471      00111110111101101111011011110111
    0.486274509803922      00111110111110001111100011111001
    0.490196078431373      00111110111110101111101011111011
    0.494117647058824      00111110111111001111110011111101
    0.498039215686275      00111110111111101111111011111111
    0.501960784313726      00111111000000001000000010000001
    0.505882352941176      00111111000000011000000110000010
    0.509803921568627      00111111000000101000001010000011
    0.513725490196078      00111111000000111000001110000100
    0.517647058823530      00111111000001001000010010000101
    0.521568627450980      00111111000001011000010110000110
    0.525490196078431      00111111000001101000011010000111
    0.529411764705882      00111111000001111000011110001000
    0.533333333333333      00111111000010001000100010001001
    0.537254901960784      00111111000010011000100110001010
    0.541176470588235      00111111000010101000101010001011
    0.545098039215686      00111111000010111000101110001100
    0.549019607843137      00111111000011001000110010001101
    0.552941176470588      00111111000011011000110110001110
    0.556862745098039      00111111000011101000111010001111
    0.560784313725490      00111111000011111000111110010000
    0.564705882352941      00111111000100001001000010010001
    0.568627450980392      00111111000100011001000110010010
    0.572549019607843      00111111000100101001001010010011
    0.576470588235294      00111111000100111001001110010100
    0.580392156862745      00111111000101001001010010010101
    0.584313725490196      00111111000101011001010110010110
    0.588235294117647      00111111000101101001011010010111
    0.592156862745098      00111111000101111001011110011000
    0.596078431372549      00111111000110001001100010011001
    0.600000000000000      00111111000110011001100110011010
    0.603921568627451      00111111000110101001101010011011
    0.607843137254902      00111111000110111001101110011100
    0.611764705882353      00111111000111001001110010011101
    0.615686274509804      00111111000111011001110110011110
    0.619607843137255      00111111000111101001111010011111
    0.623529411764706      00111111000111111001111110100000
    0.627450980392157      00111111001000001010000010100001
    0.631372549019608      00111111001000011010000110100010
    0.635294117647059      00111111001000101010001010100011
    0.639215686274510      00111111001000111010001110100100
    0.643137254901961      00111111001001001010010010100101
    0.647058823529412      00111111001001011010010110100110
    0.650980392156863      00111111001001101010011010100111
    0.654901960784314      00111111001001111010011110101000
    0.658823529411765      00111111001010001010100010101001
    0.662745098039216      00111111001010011010100110101010
    0.666666666666667      00111111001010101010101010101011
    0.670588235294118      00111111001010111010101110101100
    0.674509803921569      00111111001011001010110010101101
    0.678431372549020      00111111001011011010110110101110
    0.682352941176471      00111111001011101010111010101111
    0.686274509803922      00111111001011111010111110110000
    0.690196078431373      00111111001100001011000010110001
    0.694117647058824      00111111001100011011000110110010
    0.698039215686275      00111111001100101011001010110011
    0.701960784313725      00111111001100111011001110110100
    0.705882352941177      00111111001101001011010010110101
    0.709803921568628      00111111001101011011010110110110
    0.713725490196078      00111111001101101011011010110111
    0.717647058823529      00111111001101111011011110111000
    0.721568627450980      00111111001110001011100010111001
    0.725490196078431      00111111001110011011100110111010
    0.729411764705882      00111111001110101011101010111011
    0.733333333333333      00111111001110111011101110111100
    0.737254901960784      00111111001111001011110010111101
    0.741176470588235      00111111001111011011110110111110
    0.745098039215686      00111111001111101011111010111111
    0.749019607843137      00111111001111111011111111000000
    0.752941176470588      00111111010000001100000011000001
    0.756862745098039      00111111010000011100000111000010
    0.760784313725490      00111111010000011100000111000010
    0.764705882352941      00111111010000111100001111000100
    0.768627450980392      00111111010001001100010011000101
    0.772549019607843      00111111010001011100010111000110
    0.776470588235294      00111111010001101100011011000111
    0.780392156862745      00111111010001111100011111001000
    0.784313725490196      00111111010010001100100011001001
    0.788235294117647      00111111010010011100100111001010
    0.792156862745098      00111111010010101100101011001011
    0.796078431372549      00111111010010111100101111001100
    0.800000000000000      00111111010011001100110011001101
    0.803921568627451      00111111010011011100110111001110
    0.807843137254902      00111111010011101100111011001111
    0.811764705882353      00111111010011111100111111010000
    0.815686274509804      00111111010100001101000011010001
    0.819607843137255      00111111010100011101000111010010
    0.823529411764706      00111111010100101101001011010011
    0.827450980392157      00111111010100111101001111010100
    0.831372549019608      00111111010101001101010011010101
    0.835294117647059      00111111010101011101010111010110
    0.839215686274510      00111111010101101101011011010111
    0.843137254901961      00111111010101111101011111011000
    0.847058823529412      00111111010110001101100011011001
    0.850980392156863      00111111010110011101100111011010
    0.854901960784314      00111111010110101101101011011011
    0.858823529411765      00111111010110111101101111011100
    0.862745098039216      00111111010111001101110011011101
    0.866666666666667      00111111010111011101110111011110
    0.870588235294118      00111111010111101101111011011111
    0.874509803921569      00111111010111111101111111100000
    0.878431372549020      00111111011000001110000011100001
    0.882352941176471      00111111011000011110000111100010
    0.886274509803922      00111111011000101110001011100011
    0.890196078431373      00111111011000111110001111100100
    0.894117647058824      00111111011001001110010011100101
    0.898039215686275      00111111011001011110010111100110
    0.901960784313726      00111111011001101110011011100111
    0.905882352941177      00111111011001111110011111101000
    0.909803921568627      00111111011010001110100011101001
    0.913725490196078      00111111011010011110100111101010
    0.917647058823529      00111111011010101110101011101011
    0.921568627450980      00111111011010111110101111101100
    0.925490196078431      00111111011011001110110011101101
    0.929411764705882      00111111011011011110110111101110
    0.933333333333333      00111111011011101110111011101111
    0.937254901960784      00111111011011111110111111110000
    0.941176470588235      00111111011100001111000011110001
    0.945098039215686      00111111011100011111000111110010
    0.949019607843137      00111111011100101111001011110011
    0.952941176470588      00111111011100111111001111110100
    0.956862745098039      00111111011101001111010011110101
    0.960784313725490      00111111011101011111010111110110
    0.964705882352941      00111111011101101111011011110111
    0.968627450980392      00111111011101111111011111111000
    0.972549019607843      00111111011110001111100011111001
    0.976470588235294      00111111011110011111100111111010
    0.980392156862745      00111111011110101111101011111011
    0.984313725490196      00111111011110111111101111111100
    0.988235294117647      00111111011111001111110011111101
    0.992156862745098      00111111011111011111110111111110
    0.996078431372549      00111111011111101111111011111111
    1                      00111111100000000000000000000000 
*/
////////////// RGB TO Float/255 lookup table  /////////////




/*
///////////// Conversion step1 ///////////////////////////
for i=0:255
    res(i+1,1)  = i/255;
    if ( res(i+1,1) >= 0.04045 ) 
        res_step_1(i+1,1) = ( (res(i+1,1) + 0.055) / 1.055 ) ^ 2.4;
    else
        res_step_1(i+1,1) = (res(i+1,1) / 12.92);
    end
end

0                     00000000000000000000000000000000
0.000303526983548838  00111001100111110010001010110100
0.000607053967097675  00111010000111110010001010110100
0.000910580950646513  00111010011011101011010000001110
0.00121410793419535   00111010100111110010001010110100
0.00151763491774419   00111010110001101110101101100001
0.00182116190129303   00111010111011101011010000001110
0.00212468888484186   00111011000010110011111001011101
0.00242821586839070   00111011000111110010001010110100
0.00273174285193954   00111011001100110000011100001010
0.00303526983548838   00111011010001101110101101100001
0.00334653576389916   00111011010110110101000110001110
0.00367650732404744   00111011011100001111000110001111
0.00402471701849631   00111011100000111110000111000110
0.00439144203741029   00111011100011111110011000010110
0.00477695348069373   00111011100111001000011111111101
0.00518151670233839   00111011101010011100100110110110
0.00560539162420272   00111011101101111010110101101111
0.00604883302285706   00111011110001100011010101001010
0.00651209079259447   00111011110101010110001101100000
0.00699541018726539   00111011111001010011100111000001
0.00749903204322618   00111011111101011011101001110001
0.00802319298538499   00111100000000110111001110110110
0.00856812561806931   00111100000011000110000101010011
0.00913405870222079   00111100000101011010011100000101
0.00972121732023785   00111100000111110100010110111110
0.0103298230296269    00111100001010010011111001101011
0.0109600940064882    00111100001100111001000111110111
0.0116122451797439    00111100001111100100000101001001
0.0122864883569159    00111100010010010100110101000100
0.0129830323421730    00111100010101001011011011001001
0.0137020830472897    00111100011000000111111010110100
0.0144438435960925    00111100011011001010010111011111
0.0152085144229127    00111100011110010010110100100010
0.0159962933655096    00111100100000110000101010101001
0.0168073757528874    00111100100010011010111110011111
0.0176419544883841    00111100100100001000010111011100
0.0185002201283797    00111100100101111000110111000110
0.0193823609569357    00111100100111101100011111000010
0.0202885630566524    00111100101001100011010000110011
0.0212190103760036    00111100101011011101001101111101
0.0221738847933874    00111100101101011010011000000010
0.0231533661781104    00111100101111011010110000100001
0.0241576324485048    00111100110001011110011000111010
0.0251868596273616    00111100110011100101010010101100
0.0262412218948499    00111100110101101111011111010101
0.0273208916390749    00111100110111111101000000010000
0.0284260395044208    00111100111010001101110110111010
0.0295568344378088    00111100111100100010000100101101
0.0307134437329936    00111100111110111001101011000011
0.0318960330730115    00111101000000101010010101101010
0.0331047665708851    00111101000001111001100011011101
0.0343398068086822    00111101000011001010011111100110
0.0356013148750203    00111101000100011101001010101111
0.0368894504011000    00111101000101110001100101100100
0.0382043715953465    00111101000111000111110000110000
0.0395462352767328    00111101001000011111101100111100
0.0409151969068532    00111101001001111001011010110010
0.0423114106208097    00111101001011010100111010111011
0.0437350292569735    00111101001100110010001110000001
0.0451862043856755    00111101001110010001010100101011
0.0466650863368801    00111101001111110010001111100100
0.0481718242268894    00111101010001010100111111010010
0.0497065659841272    00111101010010111001100100011101
0.0512694583740432    00111101010100011111111111101100
0.0528606470231802    00111101010110001000010001101000
0.0544802764424424    00111101010111110010011010110110
0.0561284900496001    00111101011001011110011011111101
0.0578054301910672    00111101011011001100010101100011
0.0595112381629812    00111101011100111100001000001110
0.0612460542316176    00111101011110101101110100100100
0.0630100176531677    00111101100000010000101101100101
0.0648032666929058    00111101100001001011011110010011
0.0666259386437729    00111101100010000111001100101110
0.0684781698444002    00111101100011000011111001001000
0.0703600956965959    00111101100100000001100011110100
0.0722718506823175    00111101100101000000001101000100
0.0742135683801496    00111101100101111111110101001001
0.0761853814813079    00111101100111000000011100010101
0.0781874218051863    00111101101000000010000010111010
0.0802198203144683    00111101101001000100101001001010
0.0822827071298148    00111101101010001000001111010110
0.0843762115441488    00111101101011001100110101101111
0.0865004620365498    00111101101100010010011100100111
0.0886555862857729    00111101101101011001000100001111
0.0908417111834077    00111101101110100000101100111000
0.0930589628466875    00111101101111101001010110110011
0.0953074666309647    00111101110000110011000010010000
0.0975873471418625    00111101110001111101101111100000
0.0998987282471139    00111101110011001001011110110100
0.102241733088101     00111101110100010110010000011101
0.104616484091104     00111101110101100100000100101011
0.107023102978268     00111101110110110010111011101110
0.109461710778299     00111101111000000010110101110110
0.111932427836906     00111101111001010011110011010100
0.114435373826974     00111101111010100101110100011000
0.116970667758511     00111101111011111000111001010001
0.119538427988346     00111101111101001101000010010000
0.122138772229602     00111101111110100010001111100101
0.124771817560950     00111101111111111000100001011110
0.127437680435647     00111110000000100111111100000110
0.130136476690364     00111110000001010100001001111111
0.132868321553818     00111110000010000000111010100010
0.135633329655206     00111110000010101110001101110111
0.138431615032452     00111110000011011100000100000100
0.141263291140272     00111110000100001010011101010011
0.144128470858058     00111110000100111001011001101010
0.147027266497595     00111110000101101000111001010001
0.149959789810609     00111110000110011000111100001111
0.152926151996150     00111110000111001001100010101100
0.155926463707827     00111110000111111010101100110000
0.158960835060880     00111110001000101100011010100001
0.162029375639111     00111110001001011110101100000111
0.165132194501668     00111110001010010001100001101010
0.168269400189691     00111110001011000100111011010000
0.171441100732823     00111110001011111000111001000010
0.174647403655585     00111110001100101101011011000101
0.177888415983629     00111110001101100010100001100010
0.181164244249860     00111110001110011000001100011111
0.184474994500441     00111110001111001110011100000011
0.187820772300678     00111110010000000101010000010111
0.191201682740791     00111110010000111100101001100000
0.194617830441576     00111110010001110100100111100110
0.198069319559949     00111110010010101101001010101111
0.201556253794397     00111110010011100110010011000011
0.205078736390317     00111110010100100000000000101001
0.208636870145256     00111110010101011010010011100111
0.212230757414055     00111110010110010101001100000101
0.215860500113899     00111110010111010000101010001001
0.219526199729269     00111110011000001100101101111010
0.223227957316809     00111110011001001001010111011111
0.226965873510098     00111110011010000110100110111110
0.230740048524349     00111110011011000100011100011111
0.234550582161005     00111110011100000010111000000111
0.238397573812271     00111110011101000001111001111110
0.242281122465555     00111110011110000001100010001011
0.246201326707835     00111110011111000001110000110011
0.250158284729953     00111110100000000001010010111111
0.254152094330827     00111110100000100010000000111001
0.258182852921596     00111110100001000011000010001011
0.262250657529696     00111110100001100100010110111000
0.266355604802862     00111110100010000101111111000011
0.270497791013066     00111110100010100111111010110000
0.274677312060385     00111110100011001010001010000001
0.278894263476810     00111110100011101100101100111011
0.283148740429992     00111110100100001111100011011111
0.287440837726918     00111110100100110010101101110010
0.291770649817536     00111110100101010110001011110110
0.296138270798321     00111110100101111001111101101111
0.300543794415777     00111110100110011110000011100000
0.304987314069886     00111110100111000010011101001100
0.309468922817509     00111110100111100111001010110110
0.313988713375718     00111110101000001100001100100001
0.318546778125092     00111110101000110001100010010000
0.323143209112951     00111110101001010111001100000111
0.327778098056542     00111110101001111101001010001000
0.332451536346179     00111110101010100011011100010110
0.337163615048330     00111110101011001010000010110110
0.341914424908661     00111110101011110000111101101000
0.346704056355030     00111110101100011000001100110010
0.351532599500439     00111110101100111111110000010101
0.356400144145944     00111110101101100111101000010100
0.361306779783510     00111110101110001111110100110100
0.366252595598840     00111110101110111000010101110110
0.371237680474149     00111110101111100001001011011110
0.376262122990906     00111110110000001010010101101110
0.381326011432530     00111110110000110011110100101010
0.386429433787049     00111110110001011101101000010100
0.391572477749723     00111110110010000111110000110000
0.396755230725627     00111110110010110010001110000000
0.401977779832196     00111110110011011101000000001000
0.407240211901737     00111110110100001000000111001010
0.412542613483904     00111110110100110011100011001001
0.417885070848138     00111110110101011111010100001000
0.423267669986072     00111110110110001011011010001010
0.428690496613907     00111110110110110111110101010010
0.434153636174749     00111110110111100100100101100011
0.439657173840919     00111110111000010001101010111111
0.445201194516228     00111110111000111111000101101001
0.450785782838223     00111110111001101100110101100101
0.456411023180405     00111110111010011010111010110101
0.462076999654407     00111110111011001001010101011011
0.467783796112159     00111110111011111000000101011100
0.473531496148010     00111110111100100111001010111000
0.479320183100827     00111110111101010110100101110100
0.485149940056070     00111110111110000110010110010011
0.491020849847836     00111110111110110110011100010110
0.496932995060870     00111110111111100110111000000000
0.502886458032569     00111111000000001011110100101011
0.508881320854934     00111111000000100100011000001100
0.514917665376521     00111111000000111101000110100101
0.520995573204354     00111111000001010101111111110111
0.527115125705813     00111111000001101111000100000100
0.533276404010505     00111111000010001000010011001101
0.539479489012107     00111111000010100001101101010100
0.545724461370187     00111111000010111011010010011001
0.552011401512000     00111111000011010101000010011111
0.558340389634268     00111111000011101110111101100101
0.564711505704929     00111111000100001001000011101111
0.571124829464873     00111111000100100011010100111101
0.577580440429651     00111111000100111101110001010000
0.584078417891164     00111111000101011000011000101010
0.590618840919337     00111111000101110011001011001100
0.597201788363763     00111111000110001110001000110111
0.603827338855338     00111111000110101001010001101110
0.610495570807865     00111111000111000100100101110000
0.617206562419651     00111111000111100000000101000000
0.623960391675076     00111111000111111011101111011110
0.630757136346147     00111111001000010111100101001101
0.637596873994033     00111111001000110011100110001100
0.644479681970582     00111111001001001111110010011111
0.651405637419824     00111111001001101100001010000101
0.658374817279449     00111111001010001000101101000001
0.665387298282272     00111111001010100101011011010010
0.672443156957688     00111111001011000010010100111100
0.679542469633094     00111111001011011111011001111111
0.686685312435314     00111111001011111100101010011100
0.693871761291990     00111111001100011010000110010100
0.701101891932973     00111111001100110111101101101010
0.708375779891687     00111111001101010101100000011101
0.715693500506481     00111111001101110011011110110000
0.723055128921969     00111111001110010001101000100100
0.730460740090354     00111111001110101111111101111010
0.737910408772731     00111111001111001110011110110010
0.745404209540387     00111111001111101101001011001111
0.752942216776078     00111111010000001100000011010010
0.760524504675292     00111111010000101011000110111100
0.768151147247507     00111111010001001010010110001110
0.775822218317424     00111111010001101001110001001001
0.783537791526194     00111111010010001001010111101111
0.791297940332630     00111111010010101001001010000000
0.799102738014409     00111111010011001001000111111111
0.806952257669252     00111111010011101001010001101100
0.814846572216101     00111111010100001001100111001001
0.822785754396284     00111111010100101010001000010110
0.830769876774655     00111111010101001010110101010110
0.838799011740740     00111111010101101011101110001000
0.846873231509858     00111111010110001100110010101111
0.854992608124234     00111111010110101110000011001100
0.863157213454102     00111111010111001111011111011111
0.871367119198797     00111111010111110001000111101010
0.879622396887832     00111111011000010010111011101111
0.887923117881966     00111111011000110100111011101110
0.896269353374266     00111111011001010111000111101001
0.904661174391150     00111111011001111001011111100000
0.913098651793419     00111111011010011100000011010101
0.921581856277295     00111111011010111110110011001010
0.930110858375424     00111111011011100001101110111111
0.938685728457888     00111111011100000100110110110101
0.947306536733200     00111111011100101000001010101110
0.955973353249286     00111111011101001011101010101011
0.964686247894465     00111111011101101111010110101110
0.973445290398413     00111111011110010011001110110110
0.982250550333117     00111111011110110111010011000110
0.991102097113830     00111111011111011011100011011110
1                     00111111100000000000000000000000


///////// Conversion step2 //////////////////////////////
*/

module Lab_conversion_pipelined(
//Take data from PS to PL IP ///
input wr_en,
input [7:0]r,g,b,

////B-Ram for lookup (Accelerator)
input      [31:0]BROM_PORTA_dout,
input      [31:0]BROM_PORTB_dout,
input      [31:0]BROM_PORTC_dout,

//Thresholding RGB (PORT A connection)
output     [15:0]RGB_PORTA_addr,
output     RGB_PORTA_clk, 
input      RGB_PORTA_din,
output     RGB_PORTA_dout,
output     RGB_PORTA_wea,

//CIE_A (PORT B connection)
output     [15:0]CIE_A_PORTB_addr,
output     CIE_A_PORTB_clk,
input      [31:0]CIE_A_PORTB_din,
output     [31:0]CIE_A_PORTB_dout,
output     CIE_A_PORTB_wea,

//CIE_LAB (PORT B connection)
output     [15:0]CIE_LAB_PORTB_addr,
output     CIE_LAB_PORTB_clk,
output     [2:0]CIE_LAB_PORTB_dout,
output     CIE_LAB_PORTB_wea,

//Color features bins of CIE_ab (PORT A connection)
output     [15:0]CIE_AB_COLOR_PORTA_addr,
output     CIE_AB_COLOR_PORT_clk,
output     [7:0]CIE_AB_COLOR_PORTA_dout,
output     CIE_AB_COLOR_PORTA_wea,

input clk,reset, 
output reg done=0, //remaining
output reg finish_lab=0 //remaining
);

/*= '{
32'b00000000000000000000000000000000,
32'b00111001100111110010001010110100,
32'b00111010000111110010001010110100,
32'b00111010011011101011010000001110,
32'b00111010100111110010001010110100,
32'b00111010110001101110101101100001,
32'b00111010111011101011010000001110,
32'b00111011000010110011111001011101,
32'b00111011000111110010001010110100,
32'b00111011001100110000011100001010,
32'b00111011010001101110101101100001,
32'b00111011010110110101000110001110,
32'b00111011011100001111000110001111,
32'b00111011100000111110000111000110,
32'b00111011100011111110011000010110,
32'b00111011100111001000011111111101,
32'b00111011101010011100100110110110,
32'b00111011101101111010110101101111,
32'b00111011110001100011010101001010,
32'b00111011110101010110001101100000,
32'b00111011111001010011100111000001,
32'b00111011111101011011101001110001,
32'b00111100000000110111001110110110,
32'b00111100000011000110000101010011,
32'b00111100000101011010011100000101,
32'b00111100000111110100010110111110,
32'b00111100001010010011111001101011,
32'b00111100001100111001000111110111,
32'b00111100001111100100000101001001,
32'b00111100010010010100110101000100,
32'b00111100010101001011011011001001,
32'b00111100011000000111111010110100,
32'b00111100011011001010010111011111,
32'b00111100011110010010110100100010,
32'b00111100100000110000101010101001,
32'b00111100100010011010111110011111,
32'b00111100100100001000010111011100,
32'b00111100100101111000110111000110,
32'b00111100100111101100011111000010,
32'b00111100101001100011010000110011,
32'b00111100101011011101001101111101,
32'b00111100101101011010011000000010,
32'b00111100101111011010110000100001,
32'b00111100110001011110011000111010,
32'b00111100110011100101010010101100,
32'b00111100110101101111011111010101,
32'b00111100110111111101000000010000,
32'b00111100111010001101110110111010,
32'b00111100111100100010000100101101,
32'b00111100111110111001101011000011,
32'b00111101000000101010010101101010,
32'b00111101000001111001100011011101,
32'b00111101000011001010011111100110,
32'b00111101000100011101001010101111,
32'b00111101000101110001100101100100,
32'b00111101000111000111110000110000,
32'b00111101001000011111101100111100,
32'b00111101001001111001011010110010,
32'b00111101001011010100111010111011,
32'b00111101001100110010001110000001,
32'b00111101001110010001010100101011,
32'b00111101001111110010001111100100,
32'b00111101010001010100111111010010,
32'b00111101010010111001100100011101,
32'b00111101010100011111111111101100,
32'b00111101010110001000010001101000,
32'b00111101010111110010011010110110,
32'b00111101011001011110011011111101,
32'b00111101011011001100010101100011,
32'b00111101011100111100001000001110,
32'b00111101011110101101110100100100,
32'b00111101100000010000101101100101,
32'b00111101100001001011011110010011,
32'b00111101100010000111001100101110,
32'b00111101100011000011111001001000,
32'b00111101100100000001100011110100,
32'b00111101100101000000001101000100,
32'b00111101100101111111110101001001,
32'b00111101100111000000011100010101,
32'b00111101101000000010000010111010,
32'b00111101101001000100101001001010,
32'b00111101101010001000001111010110,
32'b00111101101011001100110101101111,
32'b00111101101100010010011100100111,
32'b00111101101101011001000100001111,
32'b00111101101110100000101100111000,
32'b00111101101111101001010110110011,
32'b00111101110000110011000010010000,
32'b00111101110001111101101111100000,
32'b00111101110011001001011110110100,
32'b00111101110100010110010000011101,
32'b00111101110101100100000100101011,
32'b00111101110110110010111011101110,
32'b00111101111000000010110101110110,
32'b00111101111001010011110011010100,
32'b00111101111010100101110100011000,
32'b00111101111011111000111001010001,
32'b00111101111101001101000010010000,
32'b00111101111110100010001111100101,
32'b00111101111111111000100001011110,
32'b00111110000000100111111100000110,
32'b00111110000001010100001001111111,
32'b00111110000010000000111010100010,
32'b00111110000010101110001101110111,
32'b00111110000011011100000100000100,
32'b00111110000100001010011101010011,
32'b00111110000100111001011001101010,
32'b00111110000101101000111001010001,
32'b00111110000110011000111100001111,
32'b00111110000111001001100010101100,
32'b00111110000111111010101100110000,
32'b00111110001000101100011010100001,
32'b00111110001001011110101100000111,
32'b00111110001010010001100001101010,
32'b00111110001011000100111011010000,
32'b00111110001011111000111001000010,
32'b00111110001100101101011011000101,
32'b00111110001101100010100001100010,
32'b00111110001110011000001100011111,
32'b00111110001111001110011100000011,
32'b00111110010000000101010000010111,
32'b00111110010000111100101001100000,
32'b00111110010001110100100111100110,
32'b00111110010010101101001010101111,
32'b00111110010011100110010011000011,
32'b00111110010100100000000000101001,
32'b00111110010101011010010011100111,
32'b00111110010110010101001100000101,
32'b00111110010111010000101010001001,
32'b00111110011000001100101101111010,
32'b00111110011001001001010111011111,
32'b00111110011010000110100110111110,
32'b00111110011011000100011100011111,
32'b00111110011100000010111000000111,
32'b00111110011101000001111001111110,
32'b00111110011110000001100010001011,
32'b00111110011111000001110000110011,
32'b00111110100000000001010010111111,
32'b00111110100000100010000000111001,
32'b00111110100001000011000010001011,
32'b00111110100001100100010110111000,
32'b00111110100010000101111111000011,
32'b00111110100010100111111010110000,
32'b00111110100011001010001010000001,
32'b00111110100011101100101100111011,
32'b00111110100100001111100011011111,
32'b00111110100100110010101101110010,
32'b00111110100101010110001011110110,
32'b00111110100101111001111101101111,
32'b00111110100110011110000011100000,
32'b00111110100111000010011101001100,
32'b00111110100111100111001010110110,
32'b00111110101000001100001100100001,
32'b00111110101000110001100010010000,
32'b00111110101001010111001100000111,
32'b00111110101001111101001010001000,
32'b00111110101010100011011100010110,
32'b00111110101011001010000010110110,
32'b00111110101011110000111101101000,
32'b00111110101100011000001100110010,
32'b00111110101100111111110000010101,
32'b00111110101101100111101000010100,
32'b00111110101110001111110100110100,
32'b00111110101110111000010101110110,
32'b00111110101111100001001011011110,
32'b00111110110000001010010101101110,
32'b00111110110000110011110100101010,
32'b00111110110001011101101000010100,
32'b00111110110010000111110000110000,
32'b00111110110010110010001110000000,
32'b00111110110011011101000000001000,
32'b00111110110100001000000111001010,
32'b00111110110100110011100011001001,
32'b00111110110101011111010100001000,
32'b00111110110110001011011010001010,
32'b00111110110110110111110101010010,
32'b00111110110111100100100101100011,
32'b00111110111000010001101010111111,
32'b00111110111000111111000101101001,
32'b00111110111001101100110101100101,
32'b00111110111010011010111010110101,
32'b00111110111011001001010101011011,
32'b00111110111011111000000101011100,
32'b00111110111100100111001010111000,
32'b00111110111101010110100101110100,
32'b00111110111110000110010110010011,
32'b00111110111110110110011100010110,
32'b00111110111111100110111000000000,
32'b00111111000000001011110100101011,
32'b00111111000000100100011000001100,
32'b00111111000000111101000110100101,
32'b00111111000001010101111111110111,
32'b00111111000001101111000100000100,
32'b00111111000010001000010011001101,
32'b00111111000010100001101101010100,
32'b00111111000010111011010010011001,
32'b00111111000011010101000010011111,
32'b00111111000011101110111101100101,
32'b00111111000100001001000011101111,
32'b00111111000100100011010100111101,
32'b00111111000100111101110001010000,
32'b00111111000101011000011000101010,
32'b00111111000101110011001011001100,
32'b00111111000110001110001000110111,
32'b00111111000110101001010001101110,
32'b00111111000111000100100101110000,
32'b00111111000111100000000101000000,
32'b00111111000111111011101111011110,
32'b00111111001000010111100101001101,
32'b00111111001000110011100110001100,
32'b00111111001001001111110010011111,
32'b00111111001001101100001010000101,
32'b00111111001010001000101101000001,
32'b00111111001010100101011011010010,
32'b00111111001011000010010100111100,
32'b00111111001011011111011001111111,
32'b00111111001011111100101010011100,
32'b00111111001100011010000110010100,
32'b00111111001100110111101101101010,
32'b00111111001101010101100000011101,
32'b00111111001101110011011110110000,
32'b00111111001110010001101000100100,
32'b00111111001110101111111101111010,
32'b00111111001111001110011110110010,
32'b00111111001111101101001011001111,
32'b00111111010000001100000011010010,
32'b00111111010000101011000110111100,
32'b00111111010001001010010110001110,
32'b00111111010001101001110001001001,
32'b00111111010010001001010111101111,
32'b00111111010010101001001010000000,
32'b00111111010011001001000111111111,
32'b00111111010011101001010001101100,
32'b00111111010100001001100111001001,
32'b00111111010100101010001000010110,
32'b00111111010101001010110101010110,
32'b00111111010101101011101110001000,
32'b00111111010110001100110010101111,
32'b00111111010110101110000011001100,
32'b00111111010111001111011111011111,
32'b00111111010111110001000111101010,
32'b00111111011000010010111011101111,
32'b00111111011000110100111011101110,
32'b00111111011001010111000111101001,
32'b00111111011001111001011111100000,
32'b00111111011010011100000011010101,
32'b00111111011010111110110011001010,
32'b00111111011011100001101110111111,
32'b00111111011100000100110110110101,
32'b00111111011100101000001010101110,
32'b00111111011101001011101010101011,
32'b00111111011101101111010110101110,
32'b00111111011110010011001110110110,
32'b00111111011110110111010011000110,
32'b00111111011111011011100011011110,
32'b00111111100000000000000000000000};
*/

reg [15:0]total_pixels = 50176;
assign    CIE_A_PORTB_clk   = clk;
assign    CIE_LAB_PORTB_clk = clk;
assign    RGB_PORTA_clk     = clk;
assign    CIE_AB_COLOR_PORT_clk = clk;

reg [7:0]pixel_r_reg,pixel_g_reg,pixel_b_reg;
 
wire [31:0]CIE_a_d,CIE_b_d,CIE_l_d;
wire CIE_a_v,CIE_b_v,CIE_l_v;

reg [31:0]step1_r_d=0,step1_g_d=0,step1_b_d=0;
reg step1_r_v=0,step1_g_v=0,step1_b_v=0;

wire mat_mul_r_v_res_1,mat_mul_r_v_res_2,mat_mul_r_v_res_3;
wire [31:0]mat_mul_r_d_res_1,mat_mul_r_d_res_2,mat_mul_r_d_res_3;

wire mat_mul_g_v_res_1,mat_mul_g_v_res_2,mat_mul_g_v_res_3;
wire [31:0]mat_mul_g_d_res_1,mat_mul_g_d_res_2,mat_mul_g_d_res_3;

wire mat_mul_b_v_res_1,mat_mul_b_v_res_2,mat_mul_b_v_res_3;
wire [31:0]mat_mul_b_d_res_1,mat_mul_b_d_res_2,mat_mul_b_d_res_3;

always@(posedge clk) begin
    if(wr_en) begin
        step1_r_v <= 1'b1;
        step1_r_d <= BROM_PORTA_dout; 
        step1_g_v <= 1'b1;
        step1_g_d <= BROM_PORTB_dout;
        step1_b_v <= 1'b1;
        step1_b_d <= BROM_PORTC_dout;
    end
    else begin
        step1_r_v <= 1'b0;
        step1_g_v <= 1'b0;
        step1_b_v <= 1'b0;
    end
end

matrix_multiplication mul_4124 (clk,step1_r_v,step1_r_d,step1_r_v,32'h3ed32d7c,mat_mul_r_v_res_1,mat_mul_r_d_res_1);
matrix_multiplication mul_2126 (clk,step1_r_v,step1_r_d,step1_r_v,32'h3e59c6ed,mat_mul_r_v_res_2,mat_mul_r_d_res_2);
matrix_multiplication mul_0193 (clk,step1_r_v,step1_r_d,step1_r_v,32'h3c9e6221,mat_mul_r_v_res_3,mat_mul_r_d_res_3);

matrix_multiplication mul_3576 (clk,step1_g_v,step1_g_d,step1_g_v,32'h3eb71437,mat_mul_g_v_res_1,mat_mul_g_d_res_1);
matrix_multiplication mul_7152 (clk,step1_g_v,step1_g_d,step1_g_v,32'h3f371437,mat_mul_g_v_res_2,mat_mul_g_d_res_2);
matrix_multiplication mul_1192 (clk,step1_g_v,step1_g_d,step1_g_v,32'h3df41aef,mat_mul_g_v_res_3,mat_mul_g_d_res_3);

matrix_multiplication mul_1805 (clk,step1_b_v,step1_b_d,step1_b_v,32'h3e38c49c,mat_mul_b_v_res_1,mat_mul_b_d_res_1);
matrix_multiplication mul_0722 (clk,step1_b_v,step1_b_d,step1_b_v,32'h3d93d07d,mat_mul_b_v_res_2,mat_mul_b_d_res_2);
matrix_multiplication mul_9505 (clk,step1_b_v,step1_b_d,step1_b_v,32'h3f734721,mat_mul_b_v_res_3,mat_mul_b_d_res_3);

wire addition_rg1_v;
wire [31:0]addition_rg1_d;
matrix_addition add_rg1   (clk,mat_mul_r_v_res_1,mat_mul_r_d_res_1,mat_mul_g_v_res_1,mat_mul_g_d_res_1,addition_rg1_v,addition_rg1_d);
wire [31:0]mat_mul_b_d_res_1_shifted;
shift_reg_12 shift_mat_mul_b_d_res_1 (mat_mul_b_d_res_1, clk, mat_mul_b_d_res_1_shifted);
wire temp4_v;
wire [31:0]temp4_d;
matrix_addition add_rgb1 (clk,addition_rg1_v,addition_rg1_d,addition_rg1_v,mat_mul_b_d_res_1_shifted,temp4_v,temp4_d);


wire addition_rg2_v;
wire [31:0]addition_rg2_d;
matrix_addition add_rg2   (clk,mat_mul_r_v_res_2,mat_mul_r_d_res_2,mat_mul_g_v_res_2,mat_mul_g_d_res_2,addition_rg2_v,addition_rg2_d);
wire [31:0]mat_mul_b_d_res_2_shifted;
shift_reg_12 shift_mat_mul_b_d_res_2 (mat_mul_b_d_res_2, clk, mat_mul_b_d_res_2_shifted);
wire temp5_v;
wire [31:0]temp5_d;
matrix_addition add_rgb2 (clk,addition_rg2_v,addition_rg2_d,addition_rg2_v,mat_mul_b_d_res_2_shifted,temp5_v,temp5_d);

wire addition_rg3_v;
wire [31:0]addition_rg3_d;
matrix_addition add_rg3   (clk,mat_mul_r_v_res_3,mat_mul_r_d_res_3,mat_mul_g_v_res_3,mat_mul_g_d_res_3,addition_rg3_v,addition_rg3_d);
wire [31:0]mat_mul_b_d_res_3_shifted;
shift_reg_12 shift_mat_mul_b_d_res_3 (mat_mul_b_d_res_3, clk, mat_mul_b_d_res_3_shifted);
wire temp6_v;
wire [31:0]temp6_d;
matrix_addition add_rgb3 (clk,addition_rg3_v,addition_rg3_d,addition_rg3_v,mat_mul_b_d_res_3_shifted,temp6_v,temp6_d);

wire temp7_v,temp8_v,temp9_v;
wire [31:0]temp7_d,temp8_d,temp9_d;

matrix_divider temp7 (clk,temp4_v,temp4_d,temp4_v,32'h3f735200,temp7_v,temp7_d); //X/Xn
matrix_divider temp8 (clk,temp5_v,temp5_d,temp5_v,32'h3f800000,temp8_v,temp8_d); //Y/Yn
matrix_divider temp9 (clk,temp6_v,temp6_d,temp6_v,32'h3f8b5ec8,temp9_v,temp9_d); //Z/Zn

///check temp7 /temp 8/temp9 > 0.008856 ///     
wire check_temp7_008856_v,check_temp8_008856_v,check_temp9_008856_v;
wire check_temp7_008856_d,check_temp8_008856_d,check_temp9_008856_d;
comparator_greater_than temp7_check_008856(clk,temp7_v,temp7_d,temp7_v,32'h3c1118c2,check_temp7_008856_v,check_temp7_008856_d);
comparator_greater_than temp8_check_008856(clk,temp8_v,temp8_d,temp8_v,32'h3c1118c2,check_temp8_008856_v,check_temp8_008856_d);
comparator_greater_than temp9_check_008856(clk,temp9_v,temp9_d,temp9_v,32'h3c1118c2,check_temp9_008856_v,check_temp9_008856_d);

///check temp7 /temp 8/temp9 > 0.35 ///
wire check_temp7_035_v,check_temp8_035_v,check_temp9_035_v;
wire check_temp7_035_d,check_temp8_035_d,check_temp9_035_d;
comparator_greater_than temp7_check_035(clk,temp7_v,temp7_d,temp7_v,32'h3eb33333,check_temp7_035_v,check_temp7_035_d);
comparator_greater_than temp8_check_035(clk,temp8_v,temp8_d,temp8_v,32'h3eb33333,check_temp8_035_v,check_temp8_035_d);
comparator_greater_than temp9_check_035(clk,temp9_v,temp9_d,temp9_v,32'h3eb33333,check_temp9_035_v,check_temp9_035_d);

///check temp7 /temp 8/temp9 > 0.08 ///
wire check_temp7_008_v,check_temp8_008_v,check_temp9_008_v;
wire check_temp7_008_d,check_temp8_008_d,check_temp9_008_d;
comparator_greater_than temp7_check_008(clk,temp7_v,temp7_d,temp7_v,32'h3da3d70a,check_temp7_008_v,check_temp7_008_d);
comparator_greater_than temp8_check_008(clk,temp8_v,temp8_d,temp8_v,32'h3da3d70a,check_temp8_008_v,check_temp8_008_d);
comparator_greater_than temp9_check_008(clk,temp9_v,temp9_d,temp9_v,32'h3da3d70a,check_temp9_008_v,check_temp9_008_d);

///check temp7 /temp 8/temp9 > 0.01 ///
wire check_temp7_001_v,check_temp8_001_v,check_temp9_001_v;
wire check_temp7_001_d,check_temp8_001_d,check_temp9_001_d;
comparator_greater_than temp7_check_001(clk,temp7_v,temp7_d,temp7_v,32'h3c23d70a,check_temp7_001_v,check_temp7_001_d);
comparator_greater_than temp8_check_001(clk,temp8_v,temp8_d,temp8_v,32'h3c23d70a,check_temp8_001_v,check_temp8_001_d);
comparator_greater_than temp9_check_001(clk,temp9_v,temp9_d,temp9_v,32'h3c23d70a,check_temp9_001_v,check_temp9_001_d);

///check temp7 /temp 8/temp9 > 0.00 ///
//Default

//if (temp7 > 0.3)
//y7 = 1 + (0.333333 * (x-1)) - (0.111111*((x-1).^2)) + (0.06172839 * ((x-1).^3)) - (0.0411522 * ((x-1).^4));
//else
//y7 = 0.5848 + (0.97466 * (x-0.2))- (1.6244*((x-0.2).^2)) + (4.5123 * ((x-0.2).^3)) - (15.0410 * ((x-0.2).^4));
//end
reg [31:0]const_0_t7,const_1_t7,const_2_t7,const_3_t7,const_4_t7,sub_val_t7;
reg [31:0]const_0_t8,const_1_t8,const_2_t8,const_3_t8,const_4_t8,sub_val_t8;
reg [31:0]const_0_t9,const_1_t9,const_2_t9,const_3_t9,const_4_t9,sub_val_t9;

always@(*)
begin
const_0_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3f800000 : 32'h3f15b574) : 32'h3ebc9eed) : 32'h3e2f0069) : 0; // 1 or 0.5848 or 0.3684  or 0.1709  or 0
const_1_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3eaaaaab : 32'h3f798351) : 32'h401d2f6f) : 32'h41366546) : 0; // 0.33333 or 0.97466 or 2.45602 or 11.399725243 or 0
const_2_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3de38e39 : 32'h3fcfec57) : 32'h4182fcb9) : 32'h443dfd91) : 0; // 0.1111111  or 1.6244 or 16.3734 or 759.962 or 1
const_3_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3d7cd6e9 : 32'h409064c3) : 32'h4335ed50) : 32'h47a4ed73) : 0; // 0.06172839 or 4.5123 or 181.927 or 84442.9 or 0
const_4_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3d288f36 : 32'h4170a7f0) : 32'h45179b2f) : 32'h4b2bccb5) : 0; // 0.0411522  or 15.0410 or 2425.699 or 11259061
sub_val_t7 = check_temp7_008856_d ? (check_temp7_001_d ? (check_temp7_008_d ? (check_temp7_035_d ? 32'h3f800000 : 32'h3e4ccccd) : 32'h3d4ccccd) : 32'h3ba3d70a) : 0; // 1 or 0.2 or 0.05 or 0.005   
end

always@(*)
begin
const_0_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3f800000 : 32'h3f15b574) : 32'h3ebc9eed) : 32'h3e2f0069) : 0; // 1 or 0.5848 or 0.3684  or 0.1709  or 0
const_1_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3eaaaaab : 32'h3f798351) : 32'h401d2f6f) : 32'h41366546) : 0; // 0.33333 or 0.97466 or 2.45602 or 11.399725243 or 0
const_2_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3de38e39 : 32'h3fcfec57) : 32'h4182fcb9) : 32'h443dfd91) : 0; // 0.1111111  or 1.6244 or 16.3734 or 759.962 or 1
const_3_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3d7cd6e9 : 32'h409064c3) : 32'h4335ed50) : 32'h47a4ed73) : 0; // 0.06172839 or 4.5123 or 181.927 or 84442.9 or 0
const_4_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3d288f36 : 32'h4170a7f0) : 32'h45179b2f) : 32'h4b2bccb5) : 0; // 0.0411522  or 15.0410 or 2425.699 or 11259061
sub_val_t8 = check_temp8_008856_d ? (check_temp8_001_d ? (check_temp8_008_d ? (check_temp8_035_d ? 32'h3f800000 : 32'h3e4ccccd) : 32'h3d4ccccd) : 32'h3ba3d70a) : 0; // 1 or 0.2 or 0.05 or 0.005    
end

always@(*)
begin
const_0_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3f800000 : 32'h3f15b574) : 32'h3ebc9eed) : 32'h3e2f0069) : 0; // 1 or 0.5848 or 0.3684  or 0.1709  or 0
const_1_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3eaaaaab : 32'h3f798351) : 32'h401d2f6f) : 32'h41366546) : 0; // 0.33333 or 0.97466 or 2.45602 or 11.399725243 or 0
const_2_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3de38e39 : 32'h3fcfec57) : 32'h4182fcb9) : 32'h443dfd91) : 0; // 0.1111111  or 1.6244 or 16.3734 or 759.962 or 1
const_3_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3d7cd6e9 : 32'h409064c3) : 32'h4335ed50) : 32'h47a4ed73) : 0; // 0.06172839 or 4.5123 or 181.927 or 84442.9 or 0
const_4_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3d288f36 : 32'h4170a7f0) : 32'h45179b2f) : 32'h4b2bccb5) : 0; // 0.0411522  or 15.0410 or 2425.699 or 11259061
sub_val_t9 = check_temp9_008856_d ? (check_temp9_001_d ? (check_temp9_008_d ? (check_temp9_035_d ? 32'h3f800000 : 32'h3e4ccccd) : 32'h3d4ccccd) : 32'h3ba3d70a) : 0; // 1 or 0.2 or 0.05 or 0.005    
end


///calculate sq,cube, forth power of sub_val ///                        //Need to delay temp
wire sub_temp7_v,pow_2_temp7_v,pow_3_temp7_v,pow_4_temp7_v;
wire [31:0]sub_temp7_d,pow_2_temp7_d,pow_3_temp7_d,pow_4_temp7_d;
wire sub_temp8_v,pow_2_temp8_v,pow_3_temp8_v,pow_4_temp8_v;
wire [31:0]sub_temp8_d,pow_2_temp8_d,pow_3_temp8_d,pow_4_temp8_d;
wire sub_temp9_v,pow_2_temp9_v,pow_3_temp9_v,pow_4_temp9_v;
wire [31:0]sub_temp9_d,pow_2_temp9_d,pow_3_temp9_d,pow_4_temp9_d;


////////////////////comparator 2 cycles delays // shifting///////////////////////////////
wire [31:0] temp7_d_2c_shifted, temp8_d_2c_shifted, temp9_d_2c_shifted;
wire valid_2c;
shift_reg_2 shift_temp7_d_2c (temp7_d, clk, temp7_d_2c_shifted);
shift_reg_2 shift_temp8_d_2c (temp8_d, clk, temp8_d_2c_shifted);
shift_reg_2 shift_temp9_d_2c (temp9_d, clk, temp9_d_2c_shifted);
shift_reg_2 shift_temp789_v  (temp7_v, clk, valid_2c);
/////////////////////////////////////////////////////////////////////////////////////////

subtraction temp7_sub(clk,valid_2c,temp7_d_2c_shifted,valid_2c,sub_val_t7,sub_temp7_v,sub_temp7_d); //calculate x-xo
subtraction temp8_sub(clk,valid_2c,temp8_d_2c_shifted,valid_2c,sub_val_t8,sub_temp8_v,sub_temp8_d);
subtraction temp9_sub(clk,valid_2c,temp9_d_2c_shifted,valid_2c,sub_val_t9,sub_temp9_v,sub_temp9_d);


//continue
////////////////////////////////////// shifting//////////////////////////////////////////////// 
////shift x for multiplier delay 8 (daley x for cubic power)////
wire [31:0] sub_temp7_d_8c_shifted, sub_temp8_d_8c_shifted, sub_temp9_d_8c_shifted;
shift_reg_8 shift_temp7_d (sub_temp7_d, clk, sub_temp7_d_8c_shifted);
shift_reg_8 shift_temp8_d (sub_temp8_d, clk, sub_temp8_d_8c_shifted);
shift_reg_8 shift_temp9_d (sub_temp9_d, clk, sub_temp9_d_8c_shifted);


////////////(1) shift constants according to the requirements//////////////////////////
wire [31:0]const_0_t7_shifted,const_1_t7_shifted,const_2_t7_shifted,const_3_t7_shifted,const_4_t7_shifted;
wire [31:0]const_0_t8_shifted,const_1_t8_shifted,const_2_t8_shifted,const_3_t8_shifted,const_4_t8_shifted;
wire [31:0]const_0_t9_shifted,const_1_t9_shifted,const_2_t9_shifted,const_3_t9_shifted,const_4_t9_shifted;
//shift C0 11+8+8+8 = 35
//shift C1-2-3-4 11+8+8 = 27
shift_reg_35 shift_const_0_t7 (const_0_t7, clk, const_0_t7_shifted);
shift_reg_27 shift_const_1_t7 (const_1_t7, clk, const_1_t7_shifted);
shift_reg_27 shift_const_2_t7 (const_2_t7, clk, const_2_t7_shifted);
shift_reg_27 shift_const_3_t7 (const_3_t7, clk, const_3_t7_shifted);
shift_reg_27 shift_const_4_t7 (const_4_t7, clk, const_4_t7_shifted);

shift_reg_35 shift_const_0_t8 (const_0_t8, clk, const_0_t8_shifted);
shift_reg_27 shift_const_1_t8 (const_1_t8, clk, const_1_t8_shifted);
shift_reg_27 shift_const_2_t8 (const_2_t8, clk, const_2_t8_shifted);
shift_reg_27 shift_const_3_t8 (const_3_t8, clk, const_3_t8_shifted);
shift_reg_27 shift_const_4_t8 (const_4_t8, clk, const_4_t8_shifted);

shift_reg_35 shift_const_0_t9 (const_0_t9, clk, const_0_t9_shifted);
shift_reg_27 shift_const_1_t9 (const_1_t9, clk, const_1_t9_shifted);
shift_reg_27 shift_const_2_t9 (const_2_t9, clk, const_2_t9_shifted);
shift_reg_27 shift_const_3_t9 (const_3_t9, clk, const_3_t9_shifted);
shift_reg_27 shift_const_4_t9 (const_4_t9, clk, const_4_t9_shifted);
//////////////////////////////////////////////////////////////////////////////////////////////

//calculating powers
matrix_multiplication mul_pow_2_t7(clk,sub_temp7_v,sub_temp7_d,sub_temp7_v,sub_temp7_d,pow_2_temp7_v,pow_2_temp7_d);
matrix_multiplication mul_pow_3_t7(clk,pow_2_temp7_v,pow_2_temp7_d,pow_2_temp7_v,sub_temp7_d_8c_shifted,pow_3_temp7_v,pow_3_temp7_d);
matrix_multiplication mul_pow_4_t7(clk,pow_2_temp7_v,pow_2_temp7_d,pow_2_temp7_v,pow_2_temp7_d,pow_4_temp7_v,pow_4_temp7_d);

matrix_multiplication mul_pow_2_t8(clk,sub_temp8_v,sub_temp8_d,sub_temp8_v,sub_temp8_d,pow_2_temp8_v,pow_2_temp8_d);
matrix_multiplication mul_pow_3_t8(clk,pow_2_temp8_v,pow_2_temp8_d,pow_2_temp8_v,sub_temp8_d_8c_shifted,pow_3_temp8_v,pow_3_temp8_d);
matrix_multiplication mul_pow_4_t8(clk,pow_2_temp8_v,pow_2_temp8_d,pow_2_temp8_v,pow_2_temp8_d,pow_4_temp8_v,pow_4_temp8_d);

matrix_multiplication mul_pow_2_t9(clk,sub_temp9_v,sub_temp9_d,sub_temp9_v,sub_temp9_d,pow_2_temp9_v,pow_2_temp9_d);
matrix_multiplication mul_pow_3_t9(clk,pow_2_temp9_v,pow_2_temp9_d,pow_2_temp9_v,sub_temp9_d_8c_shifted,pow_3_temp9_v,pow_3_temp9_d);
matrix_multiplication mul_pow_4_t9(clk,pow_2_temp9_v,pow_2_temp9_d,pow_2_temp9_v,pow_2_temp9_d,pow_4_temp9_v,pow_4_temp9_d);

//////////////////////////shift (x-xo) and (x-xo)2 ////////////////////////////////////////
wire [31:0] pow_1_temp7_d_16c_shifted, pow_1_temp8_d_16c_shifted, pow_1_temp9_d_16c_shifted;
wire sub_v_16c_shifted;
shift_reg_16  pow_1_temp7_v_16c_shift (sub_temp7_v, clk, sub_v_16c_shifted);
shift_reg_16  pow_1_temp7_d_16c_shift (sub_temp7_d, clk, pow_1_temp7_d_16c_shifted);
shift_reg_16  pow_1_temp8_d_16c_shift (sub_temp8_d, clk, pow_1_temp8_d_16c_shifted);
shift_reg_16  pow_1_temp9_d_16c_shift (sub_temp9_d, clk, pow_1_temp9_d_16c_shifted);

wire [31:0] pow_2_temp7_d_8c_shifted, pow_2_temp8_d_8c_shifted, pow_2_temp9_d_8c_shifted;
wire pow_2_v_8c_shifted;
shift_reg_8  pow_2_v_8c (pow_2_temp7_v, clk, pow_2_v_8c_shifted);
shift_reg_8  pow_2_temp7_d_8c (pow_2_temp7_d, clk, pow_2_temp7_d_8c_shifted);
shift_reg_8  pow_2_temp8_d_8c (pow_2_temp8_d, clk, pow_2_temp8_d_8c_shifted);
shift_reg_8  pow_2_temp9_d_8c (pow_2_temp9_d, clk, pow_2_temp9_d_8c_shifted);

////////////////////////////////////////////////////////////////////////////////////////////

//mul constants with powers
wire [31:0]const_1_mul_d_t7,const_2_mul_d_t7,const_3_mul_d_t7,const_4_mul_d_t7;
wire       const_1_mul_v_t7,const_2_mul_v_t7,const_3_mul_v_t7,const_4_mul_v_t7; 
wire [31:0]const_1_mul_d_t8,const_2_mul_d_t8,const_3_mul_d_t8,const_4_mul_d_t8;
wire       const_1_mul_v_t8,const_2_mul_v_t8,const_3_mul_v_t8,const_4_mul_v_t8;
wire [31:0]const_1_mul_d_t9,const_2_mul_d_t9,const_3_mul_d_t9,const_4_mul_d_t9;
wire       const_1_mul_v_t9,const_2_mul_v_t9,const_3_mul_v_t9,const_4_mul_v_t9;

matrix_multiplication mul_const_1_t7(clk, sub_v_16c_shifted, const_1_t7_shifted, sub_v_16c_shifted,  pow_1_temp7_d_16c_shifted, const_1_mul_v_t7,const_1_mul_d_t7);
matrix_multiplication mul_const_2_t7(clk, pow_2_v_8c_shifted,const_2_t7_shifted, pow_2_v_8c_shifted, pow_2_temp7_d_8c_shifted,  const_2_mul_v_t7,const_2_mul_d_t7);
matrix_multiplication mul_const_3_t7(clk, pow_3_temp7_v, const_3_t7_shifted,  pow_3_temp7_v, pow_3_temp7_d,   const_3_mul_v_t7,const_3_mul_d_t7);
matrix_multiplication mul_const_4_t7(clk, pow_4_temp7_v, const_4_t7_shifted,  pow_4_temp7_v, pow_4_temp7_d,   const_4_mul_v_t7,const_4_mul_d_t7);

matrix_multiplication mul_const_1_t8(clk, sub_v_16c_shifted, const_1_t8_shifted,  sub_v_16c_shifted,   pow_1_temp8_d_16c_shifted,  const_1_mul_v_t8,const_1_mul_d_t8);
matrix_multiplication mul_const_2_t8(clk, pow_2_v_8c_shifted,const_2_t8_shifted,  pow_2_v_8c_shifted,  pow_2_temp8_d_8c_shifted,   const_2_mul_v_t8,const_2_mul_d_t8);
matrix_multiplication mul_const_3_t8(clk, pow_3_temp8_v,const_3_t8_shifted,  pow_3_temp8_v, pow_3_temp8_d,     const_3_mul_v_t8,const_3_mul_d_t8);
matrix_multiplication mul_const_4_t8(clk, pow_4_temp8_v,const_4_t8_shifted,  pow_4_temp8_v ,pow_4_temp8_d,     const_4_mul_v_t8,const_4_mul_d_t8);

matrix_multiplication mul_const_1_t9(clk, sub_v_16c_shifted, const_1_t9_shifted,  sub_v_16c_shifted,   pow_1_temp9_d_16c_shifted,  const_1_mul_v_t9,const_1_mul_d_t9);
matrix_multiplication mul_const_2_t9(clk, pow_2_v_8c_shifted,const_2_t9_shifted,  pow_2_v_8c_shifted,  pow_2_temp9_d_8c_shifted,   const_2_mul_v_t9,const_2_mul_d_t9);
matrix_multiplication mul_const_3_t9(clk, pow_3_temp9_v,const_3_t9_shifted,  pow_3_temp9_v, pow_3_temp9_d,     const_3_mul_v_t9,const_3_mul_d_t9);
matrix_multiplication mul_const_4_t9(clk, pow_4_temp9_v,const_4_t9_shifted,  pow_4_temp9_v, pow_4_temp9_d,     const_4_mul_v_t9,const_4_mul_d_t9);


// addition and subtraction of multiplied values for temp7 > 0.008856 
wire add_0_1_t7_v, add_0_1_3_t7_v, add_2_4_t7_v, temp7_final_0_v;
wire [31:0]add_0_1_t7_d, add_0_1_3_t7_d, add_2_4_t7_d, temp7_final_0_d;
wire add_0_1_t8_v, add_0_1_3_t8_v, add_2_4_t8_v, temp8_final_0_v;
wire [31:0]add_0_1_t8_d, add_0_1_3_t8_d, add_2_4_t8_d, temp8_final_0_d;
wire add_0_1_t9_v, add_0_1_3_t9_v, add_2_4_t9_v, temp9_final_0_v;
wire [31:0]add_0_1_t9_d, add_0_1_3_t9_d, add_2_4_t9_d, temp9_final_0_d;

//////////SHIFT(2)////////////////////////////////////////////////////
////shift (x-x0)^3 * C3
wire [31:0]const_3_mul_d_t7_shifted, const_3_mul_d_t8_shifted, const_3_mul_d_t9_shifted;
shift_reg_11 shift_const_3_mul_d_t7 (const_3_mul_d_t7, clk, const_3_mul_d_t7_shifted);
shift_reg_11 shift_const_3_mul_d_t8 (const_3_mul_d_t8, clk, const_3_mul_d_t8_shifted);
shift_reg_11 shift_const_3_mul_d_t9 (const_3_mul_d_t9, clk, const_3_mul_d_t9_shifted);

//shift C2*(x-xo)^2 + C4*(x-xo)^4
wire [31:0]add_2_4_t7_d_shifted, add_2_4_t8_d_shifted, add_2_4_t9_d_shifted;
shift_reg_11 shift_add_2_4_t7_d (add_2_4_t7_d, clk, add_2_4_t7_d_shifted);
shift_reg_11 shift_add_2_4_t8_d (add_2_4_t8_d, clk, add_2_4_t8_d_shifted);
shift_reg_11 shift_add_2_4_t9_d (add_2_4_t9_d, clk, add_2_4_t9_d_shifted);
/////////////////////////////////////////////////////////////////////


matrix_addition add_0_1_t7   (clk,const_1_mul_v_t7,const_0_t7_shifted , const_1_mul_v_t7 ,const_1_mul_d_t7, add_0_1_t7_v ,add_0_1_t7_d);
matrix_addition add_0_1_3_t7 (clk,add_0_1_t7_v , add_0_1_t7_d  ,add_0_1_t7_v, const_3_mul_d_t7_shifted, add_0_1_3_t7_v,add_0_1_3_t7_d);
matrix_addition add_2_4_t7   (clk,const_2_mul_v_t7, const_2_mul_d_t7 ,const_4_mul_v_t7, const_4_mul_d_t7,add_2_4_t7_v ,add_2_4_t7_d);
subtraction sub_013_24_t7    (clk,add_0_1_3_t7_v,add_0_1_3_t7_d,add_0_1_3_t7_v,add_2_4_t7_d_shifted,temp7_final_0_v,temp7_final_0_d);

matrix_addition add_0_1_t8   (clk,const_1_mul_v_t8,const_0_t8_shifted , const_1_mul_v_t8 ,const_1_mul_d_t8, add_0_1_t8_v ,add_0_1_t8_d);
matrix_addition add_0_1_3_t8 (clk,add_0_1_t8_v , add_0_1_t8_d  ,add_0_1_t8_v, const_3_mul_d_t8_shifted, add_0_1_3_t8_v,add_0_1_3_t8_d);
matrix_addition add_2_4_t8   (clk,const_2_mul_v_t8, const_2_mul_d_t8 ,const_4_mul_v_t8, const_4_mul_d_t8,add_2_4_t8_v ,add_2_4_t8_d);
subtraction sub_013_24_t8    (clk,add_0_1_3_t8_v,add_0_1_3_t8_d,add_0_1_3_t8_v,add_2_4_t8_d_shifted,temp8_final_0_v,temp8_final_0_d);

matrix_addition add_0_1_t9   (clk,const_1_mul_v_t9,const_0_t9_shifted , const_1_mul_v_t9 ,const_1_mul_d_t9, add_0_1_t9_v ,add_0_1_t9_d);
matrix_addition add_0_1_3_t9 (clk,add_0_1_t9_v , add_0_1_t9_d  ,add_0_1_t9_v, const_3_mul_d_t9_shifted, add_0_1_3_t9_v,add_0_1_3_t9_d);
matrix_addition add_2_4_t9   (clk,const_2_mul_v_t9, const_2_mul_d_t9 ,const_4_mul_v_t9, const_4_mul_d_t9,add_2_4_t9_v ,add_2_4_t9_d);
subtraction sub_013_24_t9    (clk,add_0_1_3_t9_v,add_0_1_3_t9_d, add_0_1_3_t9_v, add_2_4_t9_d_shifted, temp9_final_0_v,temp9_final_0_d);

wire       mul_7787_t7_v,add_16_mul_7787_t7_v,temp7_final_1_v;
wire [31:0]mul_7787_t7_d,add_16_mul_7787_t7_d,temp7_final_1_d;
wire       mul_7787_t8_v,add_16_mul_7787_t8_v,temp8_final_1_v;
wire [31:0]mul_7787_t8_d,add_16_mul_7787_t8_d,temp8_final_1_d;
wire       mul_7787_t9_v,add_16_mul_7787_t9_v,temp9_final_1_v;
wire [31:0]mul_7787_t9_d,add_16_mul_7787_t9_d,temp9_final_1_d;

// addition and subtraction of multiplied values for temp7 < 0.008856 
matrix_multiplication mul_7_787_t7(clk,temp7_v,temp7_d,temp7_v,32'h40f92f1b,mul_7787_t7_v,mul_7787_t7_d);
matrix_addition add_16_116_mul_7787_t7(clk,mul_7787_t7_v,32'h3e0d3dcb,mul_7787_t7_v,mul_7787_t7_d,temp7_final_1_v,temp7_final_1_d);

matrix_multiplication mul_7_787_t8(clk,temp8_v,temp8_d,temp8_v,32'h40f92f1b,mul_7787_t8_v,mul_7787_t8_d);
matrix_addition add_16_116_mul_7787_t8(clk,mul_7787_t8_v,32'h3e0d3dcb,mul_7787_t8_v,mul_7787_t8_d,temp8_final_1_v,temp8_final_1_d);

matrix_multiplication mul_7_787_t9(clk,temp9_v,temp9_d,temp9_v,32'h40f92f1b,mul_7787_t9_v,mul_7787_t9_d);
matrix_addition add_16_116_mul_7787_t9(clk,mul_7787_t9_v,32'h3e0d3dcb,mul_7787_t9_v,mul_7787_t9_d,temp9_final_1_v,temp9_final_1_d);


//////////////////////(3) shift //////////cycles are not unknown yet////////////////////////////
///shift temp7 /temp 8/temp9 > 0.008856 ///
// 11+8+8+8+11+11+11  = 68     
wire check_temp7_008856_d_shifted,check_temp8_008856_d_shifted,check_temp9_008856_d_shifted;
shift_reg_68 shift_check_temp7_008856_d (check_temp7_008856_d, clk, check_temp7_008856_d_shifted);
shift_reg_68 shift_check_temp8_008856_d (check_temp8_008856_d, clk, check_temp8_008856_d_shifted);
shift_reg_68 shift_check_temp9_008856_d (check_temp9_008856_d, clk, check_temp9_008856_d_shifted);


// shift addition and subtraction of multiplied values for temp7 < 0.008856 
// 2+11+8+8+8+11+11+11 - 8+11 = 51
wire [31:0] temp7_final_1_d_shifted, temp8_final_1_d_shifted, temp9_final_1_d_shifted;
wire temp7_final_1_v_shifted, temp8_final_1_v_shifted, temp9_final_1_v_shifted;
shift_reg_51 shift_temp7_final_1_d (temp7_final_1_d, clk, temp7_final_1_d_shifted);
shift_reg_51 shift_temp8_final_1_d (temp8_final_1_d, clk, temp8_final_1_d_shifted);
shift_reg_51 shift_temp9_final_1_d (temp9_final_1_d, clk, temp9_final_1_d_shifted);
shift_reg_51 shift_temp7_final_1_v (temp7_final_1_v, clk, temp7_final_1_v_shifted);
shift_reg_51 shift_temp8_final_1_v (temp8_final_1_v, clk, temp8_final_1_v_shifted);
shift_reg_51 shift_temp9_final_1_v (temp9_final_1_v, clk, temp9_final_1_v_shifted);

///////////////////////////////////////////shift regiters end/////////////////////////////////////
wire [31:0]t7,t8,t9;
wire t7_v,t8_v,t9_v;
assign t7 = check_temp7_008856_d_shifted ? temp7_final_0_d : temp7_final_1_d_shifted;
assign t8 = check_temp8_008856_d_shifted ? temp8_final_0_d : temp8_final_1_d_shifted;
assign t9 = check_temp9_008856_d_shifted ? temp9_final_0_d : temp9_final_1_d_shifted;
assign t7_v = check_temp7_008856_d_shifted ? temp7_final_0_v : temp7_final_1_v_shifted;
assign t8_v = check_temp8_008856_d_shifted ? temp8_final_0_v : temp8_final_1_v_shifted;
assign t9_v = check_temp9_008856_d_shifted ? temp9_final_0_v : temp9_final_1_v_shifted;

wire [31:0]mul_116_t8_d;
wire mul_116_t8_v;

matrix_multiplication mul_116_t8(clk,t8_v,t8,t8_v,32'h42e80000,mul_116_t8_v,mul_116_t8_d);
subtraction sub_116_t8_16 (clk,mul_116_t8_v,mul_116_t8_d,mul_116_t8_v,32'h41800000,CIE_l_v,CIE_l_d);

wire [31:0]sub_7_8_d,sub_8_9_d;
wire sub_7_8_v,sub_8_9_v;

subtraction sub_7_8 (clk,t7_v,t7,t8_v,t8,sub_7_8_v,sub_7_8_d);
subtraction sub_8_9 (clk,t8_v,t8,t9_v,t9,sub_8_9_v,sub_8_9_d);
matrix_multiplication mul_CIE_a(clk,sub_7_8_v,sub_7_8_d,sub_7_8_v,32'h43fa0000,CIE_a_v,CIE_a_d);
matrix_multiplication mul_CIE_b(clk,sub_8_9_v,sub_8_9_d,sub_8_9_v,32'h43480000,CIE_b_v,CIE_b_d);


//////////////////////////////////////features//////////////////////////////////////////////////
wire [31:0] CIE_a_d_final_2c_shift;
wire CIE_a_v_final_2c_shift;
shift_reg_2 shift_2_CIE_a_v (CIE_v_d, clk, CIE_a_v_final_2c_shift);
shift_reg_2 shift_2_CIE_a_d (CIE_a_d, clk, CIE_a_d_final_2c_shift);


//check CIE_b_v,CIE_b_d <= 6
wire CIE_B_less_6_v,CIE_B_less_6_d;
comparator_less_than CIE_b_less_than_6 (CIE_b_v,CIE_b_d,CIE_b_v,32'h40c00000,CIE_B_less_6_v,CIE_B_less_6_d);
  
//checking CIE_l, CIE_a and CIE_b >0
  wire CIE_l_0_v,CIE_l_0_d;
  wire CIE_a_0_v,CIE_a_0_d;
  wire CIE_b_0_v,CIE_b_0_d;
  comparator_greater_than  check_CIE_l_0(clk,CIE_l_v,CIE_l_d,CIE_l_v,32'h00000000,CIE_l_0_v,CIE_l_0_d);
  comparator_greater_than  check_CIE_a_0(clk,CIE_a_v,CIE_a_d,CIE_a_v,32'h00000000,CIE_a_0_v,CIE_a_0_d);
  comparator_greater_than  check_CIE_b_0(clk,CIE_b_v,CIE_b_d,CIE_b_v,32'h00000000,CIE_b_0_v,CIE_b_0_d);
  
  wire CIE_a_c1_v, CIE_a_c1_d;
  wire CIE_a_c2_v, CIE_a_c2_d;
  wire CIE_a_c3_v, CIE_a_c3_d;
  wire CIE_a_c4_v, CIE_a_c4_d;
  wire CIE_a_c5_v, CIE_a_c5_d;
  wire CIE_a_c6_v, CIE_a_c6_d;
  wire CIE_a_c7_v, CIE_a_c7_d;
  wire CIE_a_c8_v, CIE_a_c8_d;
  wire CIE_a_c9_v, CIE_a_c9_d;
  wire CIE_a_c10_v, CIE_a_c10_d;
  wire CIE_a_c11_v, CIE_a_c11_d;
  wire CIE_a_c12_v, CIE_a_c12_d;
  wire CIE_a_c13_v, CIE_a_c13_d;
  
  comparator_less_than  check_CIE_a_c2001106(CIE_a_v,CIE_a_d,CIE_a_v,32'hc2001106,CIE_a_c1_v, CIE_a_c1_d);
  comparator_less_than  check_CIE_a_c1d93f52(CIE_a_v,CIE_a_d,CIE_a_v,32'hc1d93f52,CIE_a_c2_v, CIE_a_c2_d);
  comparator_less_than  check_CIE_a_c1b25c9a(CIE_a_v,CIE_a_d,CIE_a_v,32'hc1b25c9a,CIE_a_c3_v, CIE_a_c3_d);
  comparator_less_than  check_CIE_a_c18b79e1(CIE_a_v,CIE_a_d,CIE_a_v,32'hc18b79e1,CIE_a_c4_v, CIE_a_c4_d);
  comparator_less_than  check_CIE_a_c1492e50(CIE_a_v,CIE_a_d,CIE_a_v,32'hc1492e50,CIE_a_c5_v, CIE_a_c5_d);
  comparator_less_than  check_CIE_a_c0f6d1bd(CIE_a_v,CIE_a_d,CIE_a_v,32'hc0f6d1bd,CIE_a_c6_v, CIE_a_c6_d);
  comparator_less_than  check_CIE_a_c0368db4(CIE_a_v,CIE_a_d,CIE_a_v,32'hc0368db4,CIE_a_c7_v, CIE_a_c7_d);
  comparator_less_than  check_CIE_a_40008812(CIE_a_v,CIE_a_d,CIE_a_v,32'h40008812,CIE_a_c8_v, CIE_a_c8_d);
  comparator_less_than  check_CIE_a_40dbceec(CIE_a_v,CIE_a_d,CIE_a_v,32'h40dbceec,CIE_a_c9_v, CIE_a_c9_d);
  comparator_less_than  check_CIE_a_413bace8(CIE_a_v,CIE_a_d,CIE_a_v,32'h413bace8,CIE_a_c10_v,CIE_a_c10_d);
  comparator_less_than  check_CIE_a_4184b92d(CIE_a_v,CIE_a_d,CIE_a_v,32'h4184b92d,CIE_a_c11_v,CIE_a_c11_d);
  comparator_less_than  check_CIE_a_41ab9be5(CIE_a_v,CIE_a_d,CIE_a_v,32'h41ab9be5,CIE_a_c12_v,CIE_a_c12_d);
  comparator_less_than  check_CIE_a_41d27e9e(CIE_a_v,CIE_a_d,CIE_a_v,32'h41d27e9e,CIE_a_c13_v,CIE_a_c13_d);
  
  wire CIE_b_c1_v,  CIE_b_c1_d;
  wire CIE_b_c2_v,  CIE_b_c2_d;
  wire CIE_b_c3_v,  CIE_b_c3_d;
  wire CIE_b_c4_v,  CIE_b_c4_d;
  wire CIE_b_c5_v,  CIE_b_c5_d;
  wire CIE_b_c6_v,  CIE_b_c6_d;
  wire CIE_b_c7_v,  CIE_b_c7_d;
  wire CIE_b_c8_v,  CIE_b_c8_d;
  wire CIE_b_c9_v,  CIE_b_c9_d;
  wire CIE_b_c10_v, CIE_b_c10_d;
  wire CIE_b_c11_v, CIE_b_c11_d;
  wire CIE_b_c12_v, CIE_b_c12_d;
  wire CIE_b_c13_v, CIE_b_c13_d;
  
  comparator_less_than  check_CIE_b_c1c719d0(CIE_b_v,CIE_b_d,CIE_b_v,32'hc1c719d0,CIE_b_c1_v, CIE_b_c1_d);
  comparator_less_than  check_CIE_b_c17fd767(CIE_b_v,CIE_b_d,CIE_b_v,32'hc17fd767,CIE_b_c2_v, CIE_b_c2_d);
  comparator_less_than  check_CIE_b_c0e2f65e(CIE_b_v,CIE_b_d,CIE_b_v,32'hc0e2f65e,CIE_b_c3_v, CIE_b_c3_d);
  comparator_less_than  check_CIE_b_3fe7084d(CIE_b_v,CIE_b_d,CIE_b_v,32'h3fe7084d,CIE_b_c4_v, CIE_b_c4_d);
  comparator_less_than  check_CIE_b_412b3d42(CIE_b_v,CIE_b_d,CIE_b_v,32'h412b3d42,CIE_b_c5_v, CIE_b_c5_d);
  comparator_less_than  check_CIE_b_419cccbd(CIE_b_v,CIE_b_d,CIE_b_v,32'h419cccbd,CIE_b_c6_v, CIE_b_c6_d);
  comparator_less_than  check_CIE_b_41e3fada(CIE_b_v,CIE_b_d,CIE_b_v,32'h41e3fada,CIE_b_c7_v, CIE_b_c7_d);
  comparator_less_than  check_CIE_b_4215947b(CIE_b_v,CIE_b_d,CIE_b_v,32'h4215947b,CIE_b_c8_v, CIE_b_c8_d);
  comparator_less_than  check_CIE_b_42392b89(CIE_b_v,CIE_b_d,CIE_b_v,32'h42392b89,CIE_b_c9_v, CIE_b_c9_d);
  comparator_less_than  check_CIE_b_425cc297(CIE_b_v,CIE_b_d,CIE_b_v,32'h425cc297,CIE_b_c10_v,CIE_b_c10_d);
  comparator_less_than  check_CIE_b_42802cd3(CIE_b_v,CIE_b_d,CIE_b_v,32'h42802cd3,CIE_b_c11_v,CIE_b_c11_d);
  comparator_less_than  check_CIE_b_4291f85a(CIE_b_v,CIE_b_d,CIE_b_v,32'h4291f85a,CIE_b_c12_v,CIE_b_c12_d);
  comparator_less_than  check_CIE_b_42a3c3e1(CIE_b_v,CIE_b_d,CIE_b_v,32'h42a3c3e1,CIE_b_c13_v,CIE_b_c13_d);
  
//extraction color features bins//
reg [3:0]abin_number, bbin_number;
always@(*) begin
            if(CIE_a_c1_v && CIE_a_c1_d)
                abin_number = 1;
            else if(CIE_a_c2_v && CIE_a_c2_d)	
                abin_number = 2;
            else if(CIE_a_c3_v && CIE_a_c3_d)	
                abin_number = 3;
            else if(CIE_a_c4_v && CIE_a_c4_d)
                abin_number = 4;
            else if(CIE_a_c5_v && CIE_a_c5_d)	
                abin_number = 5;
            else if(CIE_a_c6_v && CIE_a_c6_d)
                abin_number = 6;
            else if(CIE_a_c7_v && CIE_a_c7_d)
                abin_number = 7;
            else if(CIE_a_c8_v && CIE_a_c8_d)	
                abin_number = 8;
            else if(CIE_a_c9_v && CIE_a_c9_d)
                abin_number = 9;
            else if(CIE_a_c10_v && CIE_a_c10_d)	
                abin_number = 10;
            else if(CIE_a_c11_v && CIE_a_c11_d)	
                abin_number = 11;
            else if(CIE_a_c12_v && CIE_a_c12_d)
                abin_number = 12;
            else if(CIE_a_c13_v && CIE_a_c13_d)
                abin_number = 13;
end
 
always@(*) begin
            if(CIE_b_c1_v && CIE_b_c1_d)
                bbin_number = 1;
            else if(CIE_b_c2_v && CIE_b_c2_d)	
                bbin_number = 2;
            else if(CIE_b_c3_v && CIE_b_c3_d)	
                bbin_number = 3;
            else if(CIE_b_c4_v && CIE_b_c4_d)
                bbin_number = 4;
            else if(CIE_b_c5_v && CIE_b_c5_d)	
                bbin_number = 5;
            else if(CIE_b_c6_v && CIE_b_c6_d)
                bbin_number = 6;
            else if(CIE_b_c7_v && CIE_b_c7_d)
                bbin_number = 7;
            else if(CIE_b_c8_v && CIE_b_c8_d)	
                bbin_number = 8;
            else if(CIE_b_c9_v && CIE_b_c9_d)	
                bbin_number = 9;
            else if(CIE_b_c10_v && CIE_b_c10_d)	
                bbin_number = 10;
            else if(CIE_b_c11_v && CIE_b_c11_d)	
                bbin_number = 11;
            else if(CIE_b_c12_v && CIE_b_c12_d)
                bbin_number = 12;
            else if(CIE_b_c13_v && CIE_b_c13_d)
                bbin_number = 13;
end
 
reg [15:0]pixel_count_lab = 1;
reg [9:0]final_pipeline_delay_count = 0;
reg rgb = 0;
wire [7:0]r_shifted,g_shifted,b_shifted;
wire store_th;

shift_reg_150 r_shift (r, clk, r_shifted);
shift_reg_150 g_shift (g, clk, g_shifted);
shift_reg_150 b_shift (b, clk, b_shifted);

assign store_th = ~(CIE_B_less_6_d || ((r_shifted < 50) && (g_shifted < 50) && (b_shifted <50)));  //need to shift r,g,b //remaining

assign CIE_A_PORTB_addr    = pixel_count_lab;
assign CIE_A_PORTB_dout    = CIE_a_d_final_2c_shift;
assign CIE_A_PORTB_wea     = CIE_a_v_final_2c_shift;
assign CIE_LAB_PORTB_addr  = pixel_count_lab;
assign CIE_LAB_PORTB_dout  = {CIE_l_0_d,CIE_a_0_d,CIE_b_0_d}; //CIE_b_d > 0 == 1
assign CIE_LAB_PORTB_wea   = CIE_a_v_final_2c_shift;
assign RGB_PORTA_addr      = pixel_count_lab;
assign RGB_PORTA_dout      = store_th;
assign RGB_PORTA_wea       = CIE_a_v_final_2c_shift;  
assign CIE_AB_COLOR_PORTA_addr = pixel_count_lab;
assign CIE_AB_COLOR_PORTA_dout = {abin_number, bbin_number};
assign CIE_AB_COLOR_PORTA_wea  = CIE_a_v_final_2c_shift;

//outputs
always@(posedge clk)
begin
if(reset) begin
    pixel_count_lab        <= 1;
    done                   <= 0;
    finish_lab             <= 0;
    final_pipeline_delay_count <= 0;
end
else if(wr_en && (pixel_count_lab != total_pixels))  // -1 prev
begin
    pixel_count_lab     <= pixel_count_lab + 1;
end
else if((final_pipeline_delay_count != 150) && (pixel_count_lab == total_pixels)) //TBD
begin
    final_pipeline_delay_count <= final_pipeline_delay_count + 1;
end
else 
begin
    pixel_count_lab <= pixel_count_lab;
    final_pipeline_delay_count <= final_pipeline_delay_count;
end
end   


always@(posedge clk)
begin
if(reset) begin
   done          <= 0;
   finish_lab    <= 0;   
end
else if(final_pipeline_delay_count == 150 && pixel_count_lab == total_pixels) begin
   done          <= 1;
   finish_lab    <= 1;
end
else begin
    done       <= done;
    finish_lab <= finish_lab;
end
end

endmodule
